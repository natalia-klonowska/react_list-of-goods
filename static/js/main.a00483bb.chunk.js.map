{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","LENGTH","good1","good2","length","reverse","console","log","App","state","NONE","reverseOrder","setState","sortAlphabetically","sortByLength","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfIC,IAAaJ,EAASO,UACxBD,EAAaE,OAGXJ,IAAaJ,EAASS,QACxBH,EAAaE,MAAK,SAACE,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAGvDP,GACFC,EAAaO,UAIfC,QAAQC,IAAIX,EAAUC,GAEfC,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMgB,EAAb,4MACEC,MAAQ,CACNb,SAAUJ,EAASkB,KACnBb,YAAY,GAHhB,EAMEc,aAAe,WACb,EAAKC,UAAS,SAAAH,GAAK,MAAK,CAAEZ,YAAaY,EAAMZ,gBAPjD,EAUEgB,mBAAqB,WACnB,EAAKD,SAAS,CAAEhB,SAAUJ,EAASO,YAXvC,EAcEe,aAAe,WACb,EAAKF,SAAS,CAAEhB,SAAUJ,EAASS,UAfvC,EAkBEc,MAAQ,WACN,EAAKH,SAAS,CAAEhB,SAAUJ,EAASkB,KAAMb,YAAY,KAnBzD,4CAsBE,WACE,MAAiCmB,KAAKP,MAA9Bb,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBrB,IAAaJ,EAASO,UAAY,WAAtD,KACToB,QAASH,KAAKH,mBAHhB,iCAQA,wBACEK,KAAK,SACLD,UAAS,4BAAuBrB,IAAaJ,EAASS,QAAU,WAAvD,KACTkB,QAASH,KAAKF,aAHhB,4BAQA,wBACEI,KAAK,SACLD,UAAS,6BAAwBpB,GAAc,WAAtC,KACTsB,QAASH,KAAKL,aAHhB,sBAQEf,IAAaJ,EAASkB,MAAQb,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,sBAUJ,6BACE,6BACGrB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CuB,KAAI,SAACC,GAAD,OAAW,oBAAI,UAAQ,OAAZ,SAAoBA,kBAlElD,GAAyBC,IAAMC,WCtD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a00483bb.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort();\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ninterface State {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  reverseOrder = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'} `}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'} `}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'} `}\n            onClick={this.reverseOrder}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map((good) => (<li data-cy=\"Good\">{good}</li>))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}